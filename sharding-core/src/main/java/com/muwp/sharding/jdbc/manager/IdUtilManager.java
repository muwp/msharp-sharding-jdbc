package com.muwp.sharding.jdbc.manager;

import com.google.common.base.CaseFormat;
import org.apache.commons.lang3.StringUtils;

import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * IdUtilManager
 *
 * @author mwup
 * @version 1.0
 * @created 2019/02/15 13:51
 **/
public class IdUtilManager {

    private static Map<Class, String> cache = new ConcurrentHashMap<>();

    /**
     * 根据注解获取自增主键字段名
     * 如果没找到就返回空字符串
     *
     * @param bean
     * @return incrementIdFieldName
     */
    public static String getAutoGeneratedId(Object bean) {
        final Class clazz = bean.getClass();
        String autoGeneratedId = cache.get(clazz);
        if (null != autoGeneratedId) {
            return autoGeneratedId;
        }
        //根据注解获取自增主键字段名
        final Field[] allFields = bean.getClass().getDeclaredFields();
        try {
            for (final Field field : allFields) {
                if ("serialVersionUID".equals(field.getName())) {
                    continue;
                }
                Id annotation = field.getAnnotation(Id.class);
                if (annotation == null) {
                    continue;
                }
                final GeneratedValue generatedValueAnno = field.getAnnotation(GeneratedValue.class);
                if (generatedValueAnno == null) {
                    continue;
                }
                // if (GenerationType.IDENTITY == generatedValueAnno.strategy() || GenerationType.TABLE == generatedValueAnno.strategy()) {
                autoGeneratedId = field.getName();
                cache.put(clazz, autoGeneratedId);
                break;
                // }
            }
        } catch (Throwable ex) {
            //quite
        }
        return autoGeneratedId;
    }

    /**
     * 将自增id的值设置回去
     *
     * @param po
     * @param autoGeneratedId
     * @param idValue
     * @throws Exception
     * @throws NoSuchMethodException
     */
    public static void setAutoIncrementIdValue(Object po, String autoGeneratedId, Object idValue) {
        String setterName = "set" + StringUtils.capitalize(autoGeneratedId);
        try {
            Method setter = po.getClass().getDeclaredMethod(setterName, idValue.getClass());
            setter.invoke(po, idValue);
        } catch (Throwable ex) {
            //quite
        }
    }

    /**
     * Convert underscore style to camel style
     *
     * @param name
     * @return
     */
    public static String toCamel(String name) {
        return CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, name);
    }

    /**
     * Convert camel style to underscore style
     *
     * @param name
     * @return
     */
    public static String toUnderscore(String name) {
        return CaseFormat.LOWER_CAMEL.to(CaseFormat.LOWER_UNDERSCORE, name);
    }
}
