<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sharding="http://shardingsphere.io/schema/shardingsphere/sharding"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://shardingsphere.io/schema/shardingsphere/sharding
                        http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <import resource="datasource.xml"/>

    <bean id="dataSource_1" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/sharding_jdbc_1?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true"/>
        <property name="username" value="root"/>
        <property name="password" value="122816"/>
        <property name="initialSize" value="5"/>
        <!-- 连接池最小空闲值，默认值是0 -->
        <property name="minIdle" value="5"/>
        <!-- 连接池最大空闲值，0时无限制  默认值是8 -->
        <property name="maxIdle" value="10"/>
        <!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制   默认值是8 -->
        <property name="maxTotal" value="15"/>

        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程 -->
        <property name="timeBetweenEvictionRunsMillis" value="300000"/>
        <!-- 给出一条简单的sql语句进行验证 -->
        <property name="validationQuery" value="select 'a'"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除. 默认为false -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 默认为true -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  默认false -->
        <property name="testOnReturn" value="false"/>

        <!-- PScache -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="20"/>

    </bean>


    <bean id="dataSource_2" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/sharding_jdbc_2?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true"/>
        <property name="username" value="root"/>
        <property name="password" value="122816"/>
        <property name="initialSize" value="5"/>
        <!-- 连接池最小空闲值，默认值是0 -->
        <property name="minIdle" value="5"/>
        <!-- 连接池最大空闲值，0时无限制  默认值是8 -->
        <property name="maxIdle" value="10"/>
        <!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制   默认值是8 -->
        <property name="maxTotal" value="15"/>

        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程 -->
        <property name="timeBetweenEvictionRunsMillis" value="300000"/>
        <!-- 给出一条简单的sql语句进行验证 -->
        <property name="validationQuery" value="select 'a'"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除. 默认为false -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 默认为true -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  默认false -->
        <property name="testOnReturn" value="false"/>

        <!-- PScache -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="20"/>

    </bean>

    <!-- 分库策略  精确分片算法 -->
    <bean id="preciseDatabaseShardingAlgorithm"
          class="com.msharp.sharding.jdbc.service.algorithm.StringPreciseDatabaseShardingAlgorithm">
        <property name="databaseNum" value="2"/>
    </bean>

    <!-- 分库策略  范围分片算法-->
    <bean id="rangeDatabaseShardingAlgorithm"
          class="com.msharp.sharding.jdbc.algorithm.range.StringRangeTableShardingAlgorithm">
        <property name="tableNum" value="2"/>
    </bean>

    <!-- 分表策略  精确分片算法 -->
    <bean id="preciseTableShardingAlgorithm"
          class="com.msharp.sharding.jdbc.algorithm.precise.StringPreciseTableShardingAlgorithm">
        <property name="tableNum" value="8"/>
    </bean>

    <!-- 分表策略  范围分片算法-->
    <bean id="rangeTableShardingAlgorithm"
          class="com.msharp.sharding.jdbc.algorithm.range.StringRangeTableShardingAlgorithm">
        <property name="tableNum" value="8"/>
    </bean>

    <!-- 分库策略 -->
    <sharding:standard-strategy id="databaseStrategy" sharding-column="appkey"
                                       precise-algorithm-ref="preciseDatabaseShardingAlgorithm"
                                       range-algorithm-ref="rangeTableShardingAlgorithm"/>

    <!-- 分表策略 -->
    <sharding:standard-strategy id="tableStrategy" sharding-column="appkey"
                                       precise-algorithm-ref="preciseTableShardingAlgorithm"
                                       range-algorithm-ref="rangeDatabaseShardingAlgorithm"/>


    <sharding:data-source id="shardingDataSource">
        <sharding:sharding-rule data-source-names="dataSource_0,dataSource_1"
                                       default-data-source-name="dataSource_0">
            <sharding:table-rules>
                <sharding:table-rule logic-table="test"
                                            actual-data-nodes="dataSource_0.test_$->{0..3},dataSource_1.test_$->{4..7}"
                                            database-strategy-ref="databaseStrategy" table-strategy-ref="tableStrategy"
                                            generate-key-column-name="id"/>


            </sharding:table-rules>

        </sharding:sharding-rule>
    </sharding:data-source>

    <!-- 事务处理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>

    <tx:annotation-driven/>

    <bean id="jdbcTemplate" class="com.msharp.single.jdbc.jtemplate.single.SimpleJdbcTemplate">
        <property name="dataSource">
            <ref bean="shardingDataSource"/>
        </property>
    </bean>

</beans>